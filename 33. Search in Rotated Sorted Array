"""
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2)

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.
"""
class Solution(object):
    def search(self, nums, target):
        start, end = 0, len(nums)-1
        while start <= end:
            mid = start + (end - start)/2
            sv, mv, ev = nums[start], nums[mid], nums[end]
            if sv < target < mv or mv < sv < target or target < mv < ev:
                end = mid - 1
            elif sv < mv < target or target < ev < mv or mv < target < ev:
                start = mid + 1
            else:
                break
        return start if target == sv else mid if target == mv else end if target == ev else -1
