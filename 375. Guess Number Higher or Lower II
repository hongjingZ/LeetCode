class Solution(object):
    def getMoneyAmount(self, n):
        """
        :type n: int
        :rtype: int
        1 2 3 4 5 6 7 8
        DP[0,8] = MIN(FOR I = 2:7:MAX(i+DP[0,left],i+dp[I,RIGHT]))
        Left already have
        right need recursive 
        """
        need = [[0] * (n+1) for _ in range(n+1)]
        for lo in range(n, 0, -1):
            for hi in range(lo+1, n+1):
                need[lo][hi] = min(x + max(need[lo][x-1], need[x+1][hi])
                                   for x in range(lo, hi))
        return need[1][n]
