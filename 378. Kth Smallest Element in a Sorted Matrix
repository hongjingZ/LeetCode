class Solution(object):
    def kthSmallest(self, matrix, k):
        """
        :type matrix: List[List[int]]
        :type k: int
        :rtype: int
        """
        n = len(matrix)
        L, R = matrix[0][0], matrix[n-1][n-1]
        while L < R:
            mid = (R+L)/2
            temp = self.search_lower_than_mid(matrix, n, mid)
            if temp < k:    L = mid + 1
            else:   R = mid
        return L
    def search_lower_than_mid(self, matrix, n, x):
        i,j,cnt = 0,n-1,0
        while i < n and j >= 0:
            if matrix[i][j] <= x:
                i += 1
                cnt += j + 1
            else:
                j -= 1
        return cnt
